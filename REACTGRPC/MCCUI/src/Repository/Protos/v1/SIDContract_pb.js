// source: SIDContract.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
goog.object.extend(proto, google_protobuf_empty_pb);
goog.exportSymbol('proto.MCCGRPCServer.v1.DeletePIDRequest', null, global);
goog.exportSymbol('proto.MCCGRPCServer.v1.DeleteSIDRequest', null, global);
goog.exportSymbol('proto.MCCGRPCServer.v1.GetAllRequest', null, global);
goog.exportSymbol('proto.MCCGRPCServer.v1.SIdModel', null, global);
goog.exportSymbol('proto.MCCGRPCServer.v1.SIdResponse', null, global);
goog.exportSymbol('proto.MCCGRPCServer.v1.UpdateDefmodResquest', null, global);
goog.exportSymbol('proto.MCCGRPCServer.v1.insertupdatedelete_response', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.MCCGRPCServer.v1.SIdModel = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.MCCGRPCServer.v1.SIdModel, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.MCCGRPCServer.v1.SIdModel.displayName = 'proto.MCCGRPCServer.v1.SIdModel';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.MCCGRPCServer.v1.SIdResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.MCCGRPCServer.v1.SIdResponse.repeatedFields_, null);
};
goog.inherits(proto.MCCGRPCServer.v1.SIdResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.MCCGRPCServer.v1.SIdResponse.displayName = 'proto.MCCGRPCServer.v1.SIdResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.MCCGRPCServer.v1.insertupdatedelete_response = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.MCCGRPCServer.v1.insertupdatedelete_response, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.MCCGRPCServer.v1.insertupdatedelete_response.displayName = 'proto.MCCGRPCServer.v1.insertupdatedelete_response';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.MCCGRPCServer.v1.UpdateDefmodResquest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.MCCGRPCServer.v1.UpdateDefmodResquest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.MCCGRPCServer.v1.UpdateDefmodResquest.displayName = 'proto.MCCGRPCServer.v1.UpdateDefmodResquest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.MCCGRPCServer.v1.GetAllRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.MCCGRPCServer.v1.GetAllRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.MCCGRPCServer.v1.GetAllRequest.displayName = 'proto.MCCGRPCServer.v1.GetAllRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.MCCGRPCServer.v1.DeleteSIDRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.MCCGRPCServer.v1.DeleteSIDRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.MCCGRPCServer.v1.DeleteSIDRequest.displayName = 'proto.MCCGRPCServer.v1.DeleteSIDRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.MCCGRPCServer.v1.DeletePIDRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.MCCGRPCServer.v1.DeletePIDRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.MCCGRPCServer.v1.DeletePIDRequest.displayName = 'proto.MCCGRPCServer.v1.DeletePIDRequest';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.MCCGRPCServer.v1.SIdModel.prototype.toObject = function(opt_includeInstance) {
  return proto.MCCGRPCServer.v1.SIdModel.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.MCCGRPCServer.v1.SIdModel} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MCCGRPCServer.v1.SIdModel.toObject = function(includeInstance, msg) {
  var f, obj = {
    parameterid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    sid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    sidname: jspb.Message.getFieldWithDefault(msg, 3, ""),
    name: jspb.Message.getFieldWithDefault(msg, 4, ""),
    minvalue: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    maxvalue: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
    ptformat: jspb.Message.getFieldWithDefault(msg, 7, ""),
    valuetype: jspb.Message.getFieldWithDefault(msg, 8, ""),
    ptcode: jspb.Message.getFieldWithDefault(msg, 9, 0),
    multiplicand: jspb.Message.getFloatingPointFieldWithDefault(msg, 10, 0.0),
    totalfact: jspb.Message.getFloatingPointFieldWithDefault(msg, 11, 0.0),
    defmode: jspb.Message.getFieldWithDefault(msg, 12, 0),
    pid: jspb.Message.getFieldWithDefault(msg, 13, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.MCCGRPCServer.v1.SIdModel}
 */
proto.MCCGRPCServer.v1.SIdModel.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.MCCGRPCServer.v1.SIdModel;
  return proto.MCCGRPCServer.v1.SIdModel.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.MCCGRPCServer.v1.SIdModel} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.MCCGRPCServer.v1.SIdModel}
 */
proto.MCCGRPCServer.v1.SIdModel.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setParameterid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSidname(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMinvalue(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMaxvalue(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setPtformat(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setValuetype(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPtcode(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMultiplicand(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTotalfact(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDefmode(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.MCCGRPCServer.v1.SIdModel.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.MCCGRPCServer.v1.SIdModel.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.MCCGRPCServer.v1.SIdModel} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MCCGRPCServer.v1.SIdModel.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getParameterid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getSid();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getSidname();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getMinvalue();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getMaxvalue();
  if (f !== 0.0) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = message.getPtformat();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getValuetype();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getPtcode();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getMultiplicand();
  if (f !== 0.0) {
    writer.writeDouble(
      10,
      f
    );
  }
  f = message.getTotalfact();
  if (f !== 0.0) {
    writer.writeDouble(
      11,
      f
    );
  }
  f = message.getDefmode();
  if (f !== 0) {
    writer.writeInt32(
      12,
      f
    );
  }
  f = message.getPid();
  if (f !== 0) {
    writer.writeInt32(
      13,
      f
    );
  }
};


/**
 * optional int32 ParameterId = 1;
 * @return {number}
 */
proto.MCCGRPCServer.v1.SIdModel.prototype.getParameterid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.MCCGRPCServer.v1.SIdModel} returns this
 */
proto.MCCGRPCServer.v1.SIdModel.prototype.setParameterid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 SId = 2;
 * @return {number}
 */
proto.MCCGRPCServer.v1.SIdModel.prototype.getSid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.MCCGRPCServer.v1.SIdModel} returns this
 */
proto.MCCGRPCServer.v1.SIdModel.prototype.setSid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string Sidname = 3;
 * @return {string}
 */
proto.MCCGRPCServer.v1.SIdModel.prototype.getSidname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.MCCGRPCServer.v1.SIdModel} returns this
 */
proto.MCCGRPCServer.v1.SIdModel.prototype.setSidname = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string Name = 4;
 * @return {string}
 */
proto.MCCGRPCServer.v1.SIdModel.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.MCCGRPCServer.v1.SIdModel} returns this
 */
proto.MCCGRPCServer.v1.SIdModel.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional double MinValue = 5;
 * @return {number}
 */
proto.MCCGRPCServer.v1.SIdModel.prototype.getMinvalue = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.MCCGRPCServer.v1.SIdModel} returns this
 */
proto.MCCGRPCServer.v1.SIdModel.prototype.setMinvalue = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional double MaxValue = 6;
 * @return {number}
 */
proto.MCCGRPCServer.v1.SIdModel.prototype.getMaxvalue = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.MCCGRPCServer.v1.SIdModel} returns this
 */
proto.MCCGRPCServer.v1.SIdModel.prototype.setMaxvalue = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional string PTFormat = 7;
 * @return {string}
 */
proto.MCCGRPCServer.v1.SIdModel.prototype.getPtformat = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.MCCGRPCServer.v1.SIdModel} returns this
 */
proto.MCCGRPCServer.v1.SIdModel.prototype.setPtformat = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string ValueType = 8;
 * @return {string}
 */
proto.MCCGRPCServer.v1.SIdModel.prototype.getValuetype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.MCCGRPCServer.v1.SIdModel} returns this
 */
proto.MCCGRPCServer.v1.SIdModel.prototype.setValuetype = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional int32 PTCode = 9;
 * @return {number}
 */
proto.MCCGRPCServer.v1.SIdModel.prototype.getPtcode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.MCCGRPCServer.v1.SIdModel} returns this
 */
proto.MCCGRPCServer.v1.SIdModel.prototype.setPtcode = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional double Multiplicand = 10;
 * @return {number}
 */
proto.MCCGRPCServer.v1.SIdModel.prototype.getMultiplicand = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 10, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.MCCGRPCServer.v1.SIdModel} returns this
 */
proto.MCCGRPCServer.v1.SIdModel.prototype.setMultiplicand = function(value) {
  return jspb.Message.setProto3FloatField(this, 10, value);
};


/**
 * optional double totalfact = 11;
 * @return {number}
 */
proto.MCCGRPCServer.v1.SIdModel.prototype.getTotalfact = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 11, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.MCCGRPCServer.v1.SIdModel} returns this
 */
proto.MCCGRPCServer.v1.SIdModel.prototype.setTotalfact = function(value) {
  return jspb.Message.setProto3FloatField(this, 11, value);
};


/**
 * optional int32 Defmode = 12;
 * @return {number}
 */
proto.MCCGRPCServer.v1.SIdModel.prototype.getDefmode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.MCCGRPCServer.v1.SIdModel} returns this
 */
proto.MCCGRPCServer.v1.SIdModel.prototype.setDefmode = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional int32 PID = 13;
 * @return {number}
 */
proto.MCCGRPCServer.v1.SIdModel.prototype.getPid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.MCCGRPCServer.v1.SIdModel} returns this
 */
proto.MCCGRPCServer.v1.SIdModel.prototype.setPid = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.MCCGRPCServer.v1.SIdResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.MCCGRPCServer.v1.SIdResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.MCCGRPCServer.v1.SIdResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.MCCGRPCServer.v1.SIdResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MCCGRPCServer.v1.SIdResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    sidList: jspb.Message.toObjectList(msg.getSidList(),
    proto.MCCGRPCServer.v1.SIdModel.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.MCCGRPCServer.v1.SIdResponse}
 */
proto.MCCGRPCServer.v1.SIdResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.MCCGRPCServer.v1.SIdResponse;
  return proto.MCCGRPCServer.v1.SIdResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.MCCGRPCServer.v1.SIdResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.MCCGRPCServer.v1.SIdResponse}
 */
proto.MCCGRPCServer.v1.SIdResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.MCCGRPCServer.v1.SIdModel;
      reader.readMessage(value,proto.MCCGRPCServer.v1.SIdModel.deserializeBinaryFromReader);
      msg.addSid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.MCCGRPCServer.v1.SIdResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.MCCGRPCServer.v1.SIdResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.MCCGRPCServer.v1.SIdResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MCCGRPCServer.v1.SIdResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSidList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.MCCGRPCServer.v1.SIdModel.serializeBinaryToWriter
    );
  }
};


/**
 * repeated SIdModel sid = 1;
 * @return {!Array<!proto.MCCGRPCServer.v1.SIdModel>}
 */
proto.MCCGRPCServer.v1.SIdResponse.prototype.getSidList = function() {
  return /** @type{!Array<!proto.MCCGRPCServer.v1.SIdModel>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.MCCGRPCServer.v1.SIdModel, 1));
};


/**
 * @param {!Array<!proto.MCCGRPCServer.v1.SIdModel>} value
 * @return {!proto.MCCGRPCServer.v1.SIdResponse} returns this
*/
proto.MCCGRPCServer.v1.SIdResponse.prototype.setSidList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.MCCGRPCServer.v1.SIdModel=} opt_value
 * @param {number=} opt_index
 * @return {!proto.MCCGRPCServer.v1.SIdModel}
 */
proto.MCCGRPCServer.v1.SIdResponse.prototype.addSid = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.MCCGRPCServer.v1.SIdModel, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.MCCGRPCServer.v1.SIdResponse} returns this
 */
proto.MCCGRPCServer.v1.SIdResponse.prototype.clearSidList = function() {
  return this.setSidList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.MCCGRPCServer.v1.insertupdatedelete_response.prototype.toObject = function(opt_includeInstance) {
  return proto.MCCGRPCServer.v1.insertupdatedelete_response.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.MCCGRPCServer.v1.insertupdatedelete_response} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MCCGRPCServer.v1.insertupdatedelete_response.toObject = function(includeInstance, msg) {
  var f, obj = {
    response: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.MCCGRPCServer.v1.insertupdatedelete_response}
 */
proto.MCCGRPCServer.v1.insertupdatedelete_response.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.MCCGRPCServer.v1.insertupdatedelete_response;
  return proto.MCCGRPCServer.v1.insertupdatedelete_response.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.MCCGRPCServer.v1.insertupdatedelete_response} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.MCCGRPCServer.v1.insertupdatedelete_response}
 */
proto.MCCGRPCServer.v1.insertupdatedelete_response.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setResponse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.MCCGRPCServer.v1.insertupdatedelete_response.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.MCCGRPCServer.v1.insertupdatedelete_response.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.MCCGRPCServer.v1.insertupdatedelete_response} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MCCGRPCServer.v1.insertupdatedelete_response.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResponse();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool response = 1;
 * @return {boolean}
 */
proto.MCCGRPCServer.v1.insertupdatedelete_response.prototype.getResponse = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.MCCGRPCServer.v1.insertupdatedelete_response} returns this
 */
proto.MCCGRPCServer.v1.insertupdatedelete_response.prototype.setResponse = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.MCCGRPCServer.v1.UpdateDefmodResquest.prototype.toObject = function(opt_includeInstance) {
  return proto.MCCGRPCServer.v1.UpdateDefmodResquest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.MCCGRPCServer.v1.UpdateDefmodResquest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MCCGRPCServer.v1.UpdateDefmodResquest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    defmode: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.MCCGRPCServer.v1.UpdateDefmodResquest}
 */
proto.MCCGRPCServer.v1.UpdateDefmodResquest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.MCCGRPCServer.v1.UpdateDefmodResquest;
  return proto.MCCGRPCServer.v1.UpdateDefmodResquest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.MCCGRPCServer.v1.UpdateDefmodResquest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.MCCGRPCServer.v1.UpdateDefmodResquest}
 */
proto.MCCGRPCServer.v1.UpdateDefmodResquest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDefmode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.MCCGRPCServer.v1.UpdateDefmodResquest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.MCCGRPCServer.v1.UpdateDefmodResquest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.MCCGRPCServer.v1.UpdateDefmodResquest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MCCGRPCServer.v1.UpdateDefmodResquest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getDefmode();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional int32 sid = 1;
 * @return {number}
 */
proto.MCCGRPCServer.v1.UpdateDefmodResquest.prototype.getSid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.MCCGRPCServer.v1.UpdateDefmodResquest} returns this
 */
proto.MCCGRPCServer.v1.UpdateDefmodResquest.prototype.setSid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 defmode = 2;
 * @return {number}
 */
proto.MCCGRPCServer.v1.UpdateDefmodResquest.prototype.getDefmode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.MCCGRPCServer.v1.UpdateDefmodResquest} returns this
 */
proto.MCCGRPCServer.v1.UpdateDefmodResquest.prototype.setDefmode = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.MCCGRPCServer.v1.GetAllRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.MCCGRPCServer.v1.GetAllRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.MCCGRPCServer.v1.GetAllRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MCCGRPCServer.v1.GetAllRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.MCCGRPCServer.v1.GetAllRequest}
 */
proto.MCCGRPCServer.v1.GetAllRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.MCCGRPCServer.v1.GetAllRequest;
  return proto.MCCGRPCServer.v1.GetAllRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.MCCGRPCServer.v1.GetAllRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.MCCGRPCServer.v1.GetAllRequest}
 */
proto.MCCGRPCServer.v1.GetAllRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.MCCGRPCServer.v1.GetAllRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.MCCGRPCServer.v1.GetAllRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.MCCGRPCServer.v1.GetAllRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MCCGRPCServer.v1.GetAllRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.MCCGRPCServer.v1.DeleteSIDRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.MCCGRPCServer.v1.DeleteSIDRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.MCCGRPCServer.v1.DeleteSIDRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MCCGRPCServer.v1.DeleteSIDRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sid: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.MCCGRPCServer.v1.DeleteSIDRequest}
 */
proto.MCCGRPCServer.v1.DeleteSIDRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.MCCGRPCServer.v1.DeleteSIDRequest;
  return proto.MCCGRPCServer.v1.DeleteSIDRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.MCCGRPCServer.v1.DeleteSIDRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.MCCGRPCServer.v1.DeleteSIDRequest}
 */
proto.MCCGRPCServer.v1.DeleteSIDRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.MCCGRPCServer.v1.DeleteSIDRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.MCCGRPCServer.v1.DeleteSIDRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.MCCGRPCServer.v1.DeleteSIDRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MCCGRPCServer.v1.DeleteSIDRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 sid = 1;
 * @return {number}
 */
proto.MCCGRPCServer.v1.DeleteSIDRequest.prototype.getSid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.MCCGRPCServer.v1.DeleteSIDRequest} returns this
 */
proto.MCCGRPCServer.v1.DeleteSIDRequest.prototype.setSid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.MCCGRPCServer.v1.DeletePIDRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.MCCGRPCServer.v1.DeletePIDRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.MCCGRPCServer.v1.DeletePIDRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MCCGRPCServer.v1.DeletePIDRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    pid: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.MCCGRPCServer.v1.DeletePIDRequest}
 */
proto.MCCGRPCServer.v1.DeletePIDRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.MCCGRPCServer.v1.DeletePIDRequest;
  return proto.MCCGRPCServer.v1.DeletePIDRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.MCCGRPCServer.v1.DeletePIDRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.MCCGRPCServer.v1.DeletePIDRequest}
 */
proto.MCCGRPCServer.v1.DeletePIDRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.MCCGRPCServer.v1.DeletePIDRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.MCCGRPCServer.v1.DeletePIDRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.MCCGRPCServer.v1.DeletePIDRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MCCGRPCServer.v1.DeletePIDRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 pid = 1;
 * @return {number}
 */
proto.MCCGRPCServer.v1.DeletePIDRequest.prototype.getPid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.MCCGRPCServer.v1.DeletePIDRequest} returns this
 */
proto.MCCGRPCServer.v1.DeletePIDRequest.prototype.setPid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


goog.object.extend(exports, proto.MCCGRPCServer.v1);
