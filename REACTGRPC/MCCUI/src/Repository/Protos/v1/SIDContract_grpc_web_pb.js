/**
 * @fileoverview gRPC-Web generated client stub for MCCGRPCServer.v1
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.2
// 	protoc              v4.23.4
// source: SIDContract.proto


/* eslint-disable */
// @ts-nocheck



const grpc = {};
grpc.web = require('grpc-web');


var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js')
const proto = {};
proto.MCCGRPCServer = {};
proto.MCCGRPCServer.v1 = require('./SIDContract_pb.js');

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.MCCGRPCServer.v1.SIDClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.MCCGRPCServer.v1.SIDPromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.google.protobuf.Empty,
 *   !proto.MCCGRPCServer.v1.SIdModel>}
 */
const methodDescriptor_SID_GetSidList = new grpc.web.MethodDescriptor(
  '/MCCGRPCServer.v1.SID/GetSidList',
  grpc.web.MethodType.SERVER_STREAMING,
  google_protobuf_empty_pb.Empty,
  proto.MCCGRPCServer.v1.SIdModel,
  /**
   * @param {!proto.google.protobuf.Empty} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.MCCGRPCServer.v1.SIdModel.deserializeBinary
);


/**
 * @param {!proto.google.protobuf.Empty} request The request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!grpc.web.ClientReadableStream<!proto.MCCGRPCServer.v1.SIdModel>}
 *     The XHR Node Readable Stream
 */
proto.MCCGRPCServer.v1.SIDClient.prototype.getSidList =
    function(request, metadata) {
  return this.client_.serverStreaming(this.hostname_ +
      '/MCCGRPCServer.v1.SID/GetSidList',
      request,
      metadata || {},
      methodDescriptor_SID_GetSidList);
};


/**
 * @param {!proto.google.protobuf.Empty} request The request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!grpc.web.ClientReadableStream<!proto.MCCGRPCServer.v1.SIdModel>}
 *     The XHR Node Readable Stream
 */
proto.MCCGRPCServer.v1.SIDPromiseClient.prototype.getSidList =
    function(request, metadata) {
  return this.client_.serverStreaming(this.hostname_ +
      '/MCCGRPCServer.v1.SID/GetSidList',
      request,
      metadata || {},
      methodDescriptor_SID_GetSidList);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.MCCGRPCServer.v1.GetAllRequest,
 *   !proto.MCCGRPCServer.v1.SIdResponse>}
 */
const methodDescriptor_SID_GetNEWSidList = new grpc.web.MethodDescriptor(
  '/MCCGRPCServer.v1.SID/GetNEWSidList',
  grpc.web.MethodType.UNARY,
  proto.MCCGRPCServer.v1.GetAllRequest,
  proto.MCCGRPCServer.v1.SIdResponse,
  /**
   * @param {!proto.MCCGRPCServer.v1.GetAllRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.MCCGRPCServer.v1.SIdResponse.deserializeBinary
);


/**
 * @param {!proto.MCCGRPCServer.v1.GetAllRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.MCCGRPCServer.v1.SIdResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.MCCGRPCServer.v1.SIdResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.MCCGRPCServer.v1.SIDClient.prototype.getNEWSidList =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/MCCGRPCServer.v1.SID/GetNEWSidList',
      request,
      metadata || {},
      methodDescriptor_SID_GetNEWSidList,
      callback);
};


/**
 * @param {!proto.MCCGRPCServer.v1.GetAllRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.MCCGRPCServer.v1.SIdResponse>}
 *     Promise that resolves to the response
 */
proto.MCCGRPCServer.v1.SIDPromiseClient.prototype.getNEWSidList =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/MCCGRPCServer.v1.SID/GetNEWSidList',
      request,
      metadata || {},
      methodDescriptor_SID_GetNEWSidList);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.MCCGRPCServer.v1.SIdModel,
 *   !proto.MCCGRPCServer.v1.insertupdatedelete_response>}
 */
const methodDescriptor_SID_UpdateSID = new grpc.web.MethodDescriptor(
  '/MCCGRPCServer.v1.SID/UpdateSID',
  grpc.web.MethodType.UNARY,
  proto.MCCGRPCServer.v1.SIdModel,
  proto.MCCGRPCServer.v1.insertupdatedelete_response,
  /**
   * @param {!proto.MCCGRPCServer.v1.SIdModel} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.MCCGRPCServer.v1.insertupdatedelete_response.deserializeBinary
);


/**
 * @param {!proto.MCCGRPCServer.v1.SIdModel} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.MCCGRPCServer.v1.insertupdatedelete_response)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.MCCGRPCServer.v1.insertupdatedelete_response>|undefined}
 *     The XHR Node Readable Stream
 */
proto.MCCGRPCServer.v1.SIDClient.prototype.updateSID =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/MCCGRPCServer.v1.SID/UpdateSID',
      request,
      metadata || {},
      methodDescriptor_SID_UpdateSID,
      callback);
};


/**
 * @param {!proto.MCCGRPCServer.v1.SIdModel} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.MCCGRPCServer.v1.insertupdatedelete_response>}
 *     Promise that resolves to the response
 */
proto.MCCGRPCServer.v1.SIDPromiseClient.prototype.updateSID =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/MCCGRPCServer.v1.SID/UpdateSID',
      request,
      metadata || {},
      methodDescriptor_SID_UpdateSID);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.MCCGRPCServer.v1.UpdateDefmodResquest,
 *   !proto.MCCGRPCServer.v1.insertupdatedelete_response>}
 */
const methodDescriptor_SID_UpdateSIDDefMode = new grpc.web.MethodDescriptor(
  '/MCCGRPCServer.v1.SID/UpdateSIDDefMode',
  grpc.web.MethodType.UNARY,
  proto.MCCGRPCServer.v1.UpdateDefmodResquest,
  proto.MCCGRPCServer.v1.insertupdatedelete_response,
  /**
   * @param {!proto.MCCGRPCServer.v1.UpdateDefmodResquest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.MCCGRPCServer.v1.insertupdatedelete_response.deserializeBinary
);


/**
 * @param {!proto.MCCGRPCServer.v1.UpdateDefmodResquest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.MCCGRPCServer.v1.insertupdatedelete_response)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.MCCGRPCServer.v1.insertupdatedelete_response>|undefined}
 *     The XHR Node Readable Stream
 */
proto.MCCGRPCServer.v1.SIDClient.prototype.updateSIDDefMode =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/MCCGRPCServer.v1.SID/UpdateSIDDefMode',
      request,
      metadata || {},
      methodDescriptor_SID_UpdateSIDDefMode,
      callback);
};


/**
 * @param {!proto.MCCGRPCServer.v1.UpdateDefmodResquest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.MCCGRPCServer.v1.insertupdatedelete_response>}
 *     Promise that resolves to the response
 */
proto.MCCGRPCServer.v1.SIDPromiseClient.prototype.updateSIDDefMode =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/MCCGRPCServer.v1.SID/UpdateSIDDefMode',
      request,
      metadata || {},
      methodDescriptor_SID_UpdateSIDDefMode);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.MCCGRPCServer.v1.DeleteSIDRequest,
 *   !proto.MCCGRPCServer.v1.insertupdatedelete_response>}
 */
const methodDescriptor_SID_DeleteSID = new grpc.web.MethodDescriptor(
  '/MCCGRPCServer.v1.SID/DeleteSID',
  grpc.web.MethodType.UNARY,
  proto.MCCGRPCServer.v1.DeleteSIDRequest,
  proto.MCCGRPCServer.v1.insertupdatedelete_response,
  /**
   * @param {!proto.MCCGRPCServer.v1.DeleteSIDRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.MCCGRPCServer.v1.insertupdatedelete_response.deserializeBinary
);


/**
 * @param {!proto.MCCGRPCServer.v1.DeleteSIDRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.MCCGRPCServer.v1.insertupdatedelete_response)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.MCCGRPCServer.v1.insertupdatedelete_response>|undefined}
 *     The XHR Node Readable Stream
 */
proto.MCCGRPCServer.v1.SIDClient.prototype.deleteSID =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/MCCGRPCServer.v1.SID/DeleteSID',
      request,
      metadata || {},
      methodDescriptor_SID_DeleteSID,
      callback);
};


/**
 * @param {!proto.MCCGRPCServer.v1.DeleteSIDRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.MCCGRPCServer.v1.insertupdatedelete_response>}
 *     Promise that resolves to the response
 */
proto.MCCGRPCServer.v1.SIDPromiseClient.prototype.deleteSID =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/MCCGRPCServer.v1.SID/DeleteSID',
      request,
      metadata || {},
      methodDescriptor_SID_DeleteSID);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.MCCGRPCServer.v1.DeletePIDRequest,
 *   !proto.MCCGRPCServer.v1.insertupdatedelete_response>}
 */
const methodDescriptor_SID_DeleteParameterId = new grpc.web.MethodDescriptor(
  '/MCCGRPCServer.v1.SID/DeleteParameterId',
  grpc.web.MethodType.UNARY,
  proto.MCCGRPCServer.v1.DeletePIDRequest,
  proto.MCCGRPCServer.v1.insertupdatedelete_response,
  /**
   * @param {!proto.MCCGRPCServer.v1.DeletePIDRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.MCCGRPCServer.v1.insertupdatedelete_response.deserializeBinary
);


/**
 * @param {!proto.MCCGRPCServer.v1.DeletePIDRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.MCCGRPCServer.v1.insertupdatedelete_response)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.MCCGRPCServer.v1.insertupdatedelete_response>|undefined}
 *     The XHR Node Readable Stream
 */
proto.MCCGRPCServer.v1.SIDClient.prototype.deleteParameterId =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/MCCGRPCServer.v1.SID/DeleteParameterId',
      request,
      metadata || {},
      methodDescriptor_SID_DeleteParameterId,
      callback);
};


/**
 * @param {!proto.MCCGRPCServer.v1.DeletePIDRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.MCCGRPCServer.v1.insertupdatedelete_response>}
 *     Promise that resolves to the response
 */
proto.MCCGRPCServer.v1.SIDPromiseClient.prototype.deleteParameterId =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/MCCGRPCServer.v1.SID/DeleteParameterId',
      request,
      metadata || {},
      methodDescriptor_SID_DeleteParameterId);
};


module.exports = proto.MCCGRPCServer.v1;

